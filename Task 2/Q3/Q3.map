Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    stm32f3xx_hal.o(i.HAL_DeInit) refers to stm32f3xx_hal.o(i.HAL_MspDeInit) for HAL_MspDeInit
    stm32f3xx_hal.o(i.HAL_Delay) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal.o(i.HAL_GetTick) refers to stm32f3xx_hal.o(.data) for uwTick
    stm32f3xx_hal.o(i.HAL_IncTick) refers to stm32f3xx_hal.o(.data) for uwTick
    stm32f3xx_hal.o(i.HAL_Init) refers to stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f3xx_hal.o(i.HAL_Init) refers to stm32f3xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f3xx_hal.o(i.HAL_Init) refers to stm32f3xx_hal.o(i.HAL_MspInit) for HAL_MspInit
    stm32f3xx_hal.o(i.HAL_InitTick) refers to stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f3xx_hal.o(i.HAL_InitTick) refers to stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f3xx_hal.o(i.HAL_InitTick) refers to stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f3xx_hal_cortex.o(i.HAL_MPU_ConfigRegion) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetPriority) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetPriorityGrouping) refers to stm32f3xx_hal_cortex.o(i.NVIC_GetPriorityGrouping) for NVIC_GetPriorityGrouping
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority) refers to stm32f3xx_hal_cortex.o(i.NVIC_GetPriorityGrouping) for NVIC_GetPriorityGrouping
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority) refers to stm32f3xx_hal_cortex.o(i.NVIC_SetPriority) for NVIC_SetPriority
    stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Config) refers to stm32f3xx_hal_cortex.o(i.NVIC_SetPriority) for NVIC_SetPriority
    stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler) refers to stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f3xx_hal_dma.o(i.HAL_DMA_Abort) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_dma.o(i.HAL_DMA_DeInit) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_dma.o(i.HAL_DMA_Init) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_dma.o(i.HAL_DMA_PollForTransfer) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_dma.o(i.HAL_DMA_Start) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_dma.o(i.HAL_DMA_Start) refers to stm32f3xx_hal_dma.o(i.DMA_SetConfig) for DMA_SetConfig
    stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) refers to stm32f3xx_hal_dma.o(i.DMA_SetConfig) for DMA_SetConfig
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_DeInit) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler) refers to q3.o(i.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_Init) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_LockPin) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_ReadPin) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_TogglePin) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_gpio.o(i.HAL_GPIO_WritePin) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to stm32f3xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetClockConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) refers to stm32f3xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) refers to stm32f3xx_hal_rcc.o(.constdata) for aAPBAHBPrescTable
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetOscConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq) refers to stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq) refers to stm32f3xx_hal_rcc.o(.constdata) for aAPBAHBPrescTable
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq) refers to stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq) refers to stm32f3xx_hal_rcc.o(.constdata) for aAPBAHBPrescTable
    stm32f3xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq) refers to stm32f3xx_hal_rcc.o(.constdata) for aPLLMULFactorTable
    stm32f3xx_hal_rcc.o(i.HAL_RCC_MCOConfig) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f3xx_hal_rcc.o(i.HAL_RCC_MCOConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_MCOConfig) refers to stm32f3xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f3xx_hal_rcc.o(i.HAL_RCC_NMI_IRQHandler) refers to stm32f3xx_hal_rcc.o(i.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f3xx_hal_rcc.o(i.HAL_RCC_OscConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_rcc.o(i.HAL_RCC_OscConfig) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.HAL_I2C_DeInit) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_DeInit) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MspDeInit) for HAL_I2C_MspDeInit
    stm32f3xx_hal_i2c.o(i.HAL_I2C_ER_IRQHandler) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler) refers to stm32f3xx_hal_i2c.o(i.I2C_SlaveTransmit_ISR) for I2C_SlaveTransmit_ISR
    stm32f3xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler) refers to stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR) for I2C_MasterTransmit_ISR
    stm32f3xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler) refers to stm32f3xx_hal_i2c.o(i.I2C_SlaveReceive_ISR) for I2C_SlaveReceive_ISR
    stm32f3xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler) refers to stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR) for I2C_MasterReceive_ISR
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Init) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Init) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MspInit) for HAL_I2C_MspInit
    stm32f3xx_hal_i2c.o(i.HAL_I2C_IsDeviceReady) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.HAL_I2C_IsDeviceReady) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) for I2C_DMAMasterReceiveCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) for I2C_DMAMasterTransmitCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) for I2C_RequestMemoryRead
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) for I2C_RequestMemoryRead
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) for I2C_DMAMemReceiveCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_IT) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) for I2C_RequestMemoryRead
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) for I2C_RequestMemoryWrite
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) for I2C_RequestMemoryWrite
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) for I2C_DMAMemTransmitCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_IT) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) for I2C_RequestMemoryWrite
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_IT) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt) for I2C_DMASlaveReceiveCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_DMA) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt) for I2C_DMASlaveTransmitCplt
    stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_DMA) refers to stm32f3xx_hal_i2c.o(i.I2C_DMAError) for I2C_DMAError
    stm32f3xx_hal_i2c.o(i.I2C_DMAError) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterRxCpltCallback) for HAL_I2C_MasterRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterTxCpltCallback) for HAL_I2C_MasterTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MemRxCpltCallback) for HAL_I2C_MemRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MemTxCpltCallback) for HAL_I2C_MemTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveRxCpltCallback) for HAL_I2C_SlaveRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveTxCpltCallback) for HAL_I2C_SlaveTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MemRxCpltCallback) for HAL_I2C_MemRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterRxCpltCallback) for HAL_I2C_MasterRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MemTxCpltCallback) for HAL_I2C_MemTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterTxCpltCallback) for HAL_I2C_MasterTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) refers to stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) for I2C_TransferConfig
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) for I2C_WaitOnTXISFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite) refers to stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f3xx_hal_i2c.o(i.I2C_SlaveReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_SlaveReceive_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveRxCpltCallback) for HAL_I2C_SlaveRxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_SlaveTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f3xx_hal_i2c.o(i.I2C_SlaveTransmit_ISR) refers to stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveTxCpltCallback) for HAL_I2C_SlaveTxCpltCallback
    stm32f3xx_hal_i2c.o(i.I2C_TransferConfig) refers to gpio_setup.o(i.assert_failed) for assert_failed
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout) refers to stm32f3xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout) refers to stm32f3xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) refers to stm32f3xx_hal.o(i.HAL_GetTick) for HAL_GetTick
    stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout) refers to stm32f3xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    gpio_setup.o(i.board_setup) refers to gpio_setup.o(i.gpio_setup) for gpio_setup
    gpio_setup.o(i.gpio_setup) refers to stm32f3xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    gpio_setup.o(i.gpio_setup) refers to stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    gpio_setup.o(i.gpio_setup) refers to stm32f3xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f3xx_it.o(i.EXTI0_IRQHandler) refers to stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler) for HAL_GPIO_EXTI_IRQHandler
    q3.o(i.CalculateMean) refers to cmsis_os1.o(i.osSignalWait) for osSignalWait
    q3.o(i.CalculateMean) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    q3.o(i.CalculateMean) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    q3.o(i.CalculateMean) refers to q3.o(.data) for id_shared1
    q3.o(i.CalculateMean) refers to q3.o(.bss) for process_buffer
    q3.o(i.CalculateVariance) refers to cmsis_os1.o(i.osSignalWait) for osSignalWait
    q3.o(i.CalculateVariance) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    q3.o(i.CalculateVariance) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    q3.o(i.CalculateVariance) refers to q3.o(.data) for id_shared1
    q3.o(i.CalculateVariance) refers to q3.o(.bss) for process_buffer
    q3.o(i.FilterData) refers to cmsis_os1.o(i.osSignalWait) for osSignalWait
    q3.o(i.FilterData) refers to cmsis_os1.o(i.osSignalSet) for osSignalSet
    q3.o(i.FilterData) refers to q3.o(.data) for filter_data_sum
    q3.o(i.FilterData) refers to q3.o(.bss) for input_buffer
    q3.o(i.GenerateData) refers to cmsis_os1.o(i.osSignalWait) for osSignalWait
    q3.o(i.GenerateData) refers to rand.o(.text) for rand
    q3.o(i.GenerateData) refers to rtx_delay.o(.text.osDelay) for osDelay
    q3.o(i.GenerateData) refers to cmsis_os1.o(i.osSignalSet) for osSignalSet
    q3.o(i.GenerateData) refers to q3.o(.bss) for data_store
    q3.o(i.GenerateData) refers to q3.o(.data) for tInputData
    q3.o(i.HAL_GPIO_EXTI_Callback) refers to q3.o(.data) for mean_flag
    q3.o(i.InputData) refers to cmsis_os1.o(i.osSignalSet) for osSignalSet
    q3.o(i.InputData) refers to cmsis_os1.o(i.osSignalWait) for osSignalWait
    q3.o(i.InputData) refers to q3.o(.data) for tGenerateData
    q3.o(i.InputData) refers to q3.o(.bss) for data_store
    q3.o(i.LEDOutput) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    q3.o(i.LEDOutput) refers to q3.o(.data) for update_LED
    q3.o(i.app_main) refers to gpio_setup.o(i.board_setup) for board_setup
    q3.o(i.app_main) refers to cmsis_os1.o(i.osThreadCreate) for osThreadCreate
    q3.o(i.app_main) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    q3.o(i.app_main) refers to q3.o(.constdata) for os_thread_def_GenerateData
    q3.o(i.app_main) refers to q3.o(.data) for tGenerateData
    q3.o(i.main) refers to system_stm32f3xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    q3.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    q3.o(i.main) refers to cmsis_os1.o(i.osThreadCreate) for osThreadCreate
    q3.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    q3.o(i.main) refers to q3.o(.constdata) for os_thread_def_app_main
    q3.o(.constdata) refers to q3.o(i.app_main) for app_main
    q3.o(.constdata) refers to q3.o(.bss.os.thread.cb) for os_thread_cb_app_main
    q3.o(.constdata) refers to q3.o(i.GenerateData) for GenerateData
    q3.o(.constdata) refers to q3.o(i.InputData) for InputData
    q3.o(.constdata) refers to q3.o(i.FilterData) for FilterData
    q3.o(.constdata) refers to q3.o(i.CalculateMean) for CalculateMean
    q3.o(.constdata) refers to q3.o(i.CalculateVariance) for CalculateVariance
    q3.o(.constdata) refers to q3.o(i.LEDOutput) for LEDOutput
    cmsis_os1.o(i.osMailAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osMailCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for osMemoryPoolGetBlockSize
    cmsis_os1.o(i.osMailCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osMailCAlloc) refers to memseta.o(.text) for __aeabi_memclr
    cmsis_os1.o(i.osMailCreate) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    cmsis_os1.o(i.osMailCreate) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(i.osMailCreate) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for osMemoryPoolDelete
    cmsis_os1.o(i.osMailCreate) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for osMessageQueueDelete
    cmsis_os1.o(i.osMailFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for osMemoryPoolFree
    cmsis_os1.o(i.osMailGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(i.osMailPut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(i.osMessageCreate) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(i.osMessageGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(i.osMessagePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(i.osMutexCreate) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    cmsis_os1.o(i.osPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osPoolCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for osMemoryPoolGetBlockSize
    cmsis_os1.o(i.osPoolCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osPoolCAlloc) refers to memseta.o(.text) for __aeabi_memclr
    cmsis_os1.o(i.osPoolCreate) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    cmsis_os1.o(i.osPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for osMemoryPoolFree
    cmsis_os1.o(i.osSemaphoreCreate) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    cmsis_os1.o(i.osSemaphoreWait) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    cmsis_os1.o(i.osSemaphoreWait) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for osSemaphoreGetCount
    cmsis_os1.o(i.osSignalClear) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    cmsis_os1.o(i.osSignalClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    cmsis_os1.o(i.osSignalSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    cmsis_os1.o(i.osSignalWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    cmsis_os1.o(i.osThreadCreate) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    cmsis_os1.o(i.osTimerCreate) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm4f.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_stm32f303xc.o(RESET) refers to startup_stm32f303xc.o(STACK) for __initial_sp
    startup_stm32f303xc.o(RESET) refers to startup_stm32f303xc.o(.text) for Reset_Handler
    startup_stm32f303xc.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32f303xc.o(RESET) refers to stm32f3xx_it.o(i.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f303xc.o(.text) refers to system_stm32f3xx.o(i.SystemInit) for SystemInit
    startup_stm32f303xc.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32f3xx.o(i.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    system_stm32f3xx.o(i.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.constdata) for AHBPrescTable
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f3xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    rand.o(.text) refers to rand.o(.data) for .data
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f303xc.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f303xc.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to q3.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to q3.o(i.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing stm32f3xx_hal.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_DisableDBGSleepMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_DisableDBGStandbyMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_DisableDBGStopMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_EnableDBGSleepMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_EnableDBGStandbyMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DBGMCU_EnableDBGStopMode), (20 bytes).
    Removing stm32f3xx_hal.o(i.HAL_DeInit), (44 bytes).
    Removing stm32f3xx_hal.o(i.HAL_Delay), (24 bytes).
    Removing stm32f3xx_hal.o(i.HAL_GetDEVID), (16 bytes).
    Removing stm32f3xx_hal.o(i.HAL_GetHalVersion), (6 bytes).
    Removing stm32f3xx_hal.o(i.HAL_GetREVID), (12 bytes).
    Removing stm32f3xx_hal.o(i.HAL_GetTick), (12 bytes).
    Removing stm32f3xx_hal.o(i.HAL_IncTick), (16 bytes).
    Removing stm32f3xx_hal.o(i.HAL_Init), (40 bytes).
    Removing stm32f3xx_hal.o(i.HAL_InitTick), (36 bytes).
    Removing stm32f3xx_hal.o(i.HAL_MspDeInit), (2 bytes).
    Removing stm32f3xx_hal.o(i.HAL_MspInit), (2 bytes).
    Removing stm32f3xx_hal.o(i.HAL_ResumeTick), (18 bytes).
    Removing stm32f3xx_hal.o(i.HAL_SuspendTick), (18 bytes).
    Removing stm32f3xx_hal.o(.data), (4 bytes).
    Removing stm32f3xx_hal_cortex.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal_cortex.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_MPU_ConfigRegion), (600 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_ClearPendingIRQ), (28 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ), (100 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetActive), (40 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetPendingIRQ), (40 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetPriority), (240 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPendingIRQ), (28 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping), (132 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_NVIC_SystemReset), (44 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig), (120 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Config), (52 bytes).
    Removing stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f3xx_hal_dma.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal_dma.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal_dma.o(i.DMA_SetConfig), (32 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_Abort), (98 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_DeInit), (1316 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_GetError), (6 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_GetState), (8 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_IRQHandler), (2312 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_Init), (464 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_PollForTransfer), (1916 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_Start), (160 bytes).
    Removing stm32f3xx_hal_dma.o(i.HAL_DMA_Start_IT), (196 bytes).
    Removing stm32f3xx_hal_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_DeInit), (416 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_LockPin), (120 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_ReadPin), (96 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_TogglePin), (88 bytes).
    Removing stm32f3xx_hal_gpio.o(i.HAL_GPIO_WritePin), (100 bytes).
    Removing stm32f3xx_hal_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_ClockConfig), (1676 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_DeInit), (72 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_DisableCSS), (28 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_EnableCSS), (24 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetClockConfig), (156 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq), (56 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetOscConfig), (288 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq), (44 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq), (44 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq), (140 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_MCOConfig), (232 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_NMI_IRQHandler), (32 bytes).
    Removing stm32f3xx_hal_rcc.o(i.HAL_RCC_OscConfig), (3284 bytes).
    Removing stm32f3xx_hal_rcc.o(.constdata), (48 bytes).
    Removing stm32f3xx_hal_i2c.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_hal_i2c.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_DeInit), (148 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_ER_IRQHandler), (134 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler), (386 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_ErrorCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_GetError), (6 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_GetState), (8 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Init), (464 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_IsDeviceReady), (344 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterRxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MasterTxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive), (316 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_DMA), (244 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Receive_IT), (178 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit), (320 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_DMA), (252 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Master_Transmit_IT), (174 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MemRxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MemTxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read), (452 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_DMA), (364 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Read_IT), (312 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write), (452 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_DMA), (372 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Mem_Write_IT), (312 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MspDeInit), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_MspInit), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveRxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_SlaveTxCpltCallback), (2 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive), (320 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_DMA), (208 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Receive_IT), (100 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit), (348 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_DMA), (256 bytes).
    Removing stm32f3xx_hal_i2c.o(i.HAL_I2C_Slave_Transmit_IT), (100 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMAError), (44 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMAMasterReceiveCplt), (452 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMAMasterTransmitCplt), (436 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMAMemReceiveCplt), (452 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMAMemTransmitCplt), (436 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMASlaveReceiveCplt), (122 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_DMASlaveTransmitCplt), (106 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed), (156 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_MasterReceive_ISR), (436 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_MasterTransmit_ISR), (456 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryRead), (130 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_RequestMemoryWrite), (130 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_SlaveReceive_ISR), (200 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_SlaveTransmit_ISR), (218 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_TransferConfig), (208 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout), (148 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout), (144 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout), (86 bytes).
    Removing stm32f3xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout), (88 bytes).
    Removing gpio_setup.o(.rev16_text), (4 bytes).
    Removing gpio_setup.o(.revsh_text), (4 bytes).
    Removing stm32f3xx_it.o(.rev16_text), (4 bytes).
    Removing stm32f3xx_it.o(.revsh_text), (4 bytes).
    Removing q3.o(.rev16_text), (4 bytes).
    Removing q3.o(.revsh_text), (4 bytes).
    Removing q3.o(.bss.os.thread.stack), (56 bytes).
    Removing cmsis_os1.o(i.osMailAlloc), (24 bytes).
    Removing cmsis_os1.o(i.osMailCAlloc), (56 bytes).
    Removing cmsis_os1.o(i.osMailCreate), (84 bytes).
    Removing cmsis_os1.o(i.osMailFree), (34 bytes).
    Removing cmsis_os1.o(i.osMailGet), (90 bytes).
    Removing cmsis_os1.o(i.osMailPut), (38 bytes).
    Removing cmsis_os1.o(i.osMessageCreate), (24 bytes).
    Removing cmsis_os1.o(i.osMessageGet), (70 bytes).
    Removing cmsis_os1.o(i.osMessagePut), (20 bytes).
    Removing cmsis_os1.o(i.osMutexCreate), (18 bytes).
    Removing cmsis_os1.o(i.osPoolAlloc), (14 bytes).
    Removing cmsis_os1.o(i.osPoolCAlloc), (42 bytes).
    Removing cmsis_os1.o(i.osPoolCreate), (24 bytes).
    Removing cmsis_os1.o(i.osPoolFree), (16 bytes).
    Removing cmsis_os1.o(i.osSemaphoreCreate), (24 bytes).
    Removing cmsis_os1.o(i.osSemaphoreWait), (62 bytes).
    Removing cmsis_os1.o(i.osSignalClear), (44 bytes).
    Removing cmsis_os1.o(i.osTimerCreate), (28 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing startup_stm32f303xc.o(HEAP), (1024 bytes).
    Removing system_stm32f3xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f3xx.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListSort), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (192 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (108 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (144 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (184 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (196 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (96 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (332 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (174 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

500 unused section(s) (total 36147 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm4f.s           0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    C:\Users\kbria\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Library\cmsis_os1.c 0x00000000   Number         0  cmsis_os1.o ABSOLUTE
    C:\Users\kbria\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\kbria\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.6.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal.c 0x00000000   Number         0  stm32f3xx_hal.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal_cortex.c 0x00000000   Number         0  stm32f3xx_hal_cortex.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal_dma.c 0x00000000   Number         0  stm32f3xx_hal_dma.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal_gpio.c 0x00000000   Number         0  stm32f3xx_hal_gpio.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal_i2c.c 0x00000000   Number         0  stm32f3xx_hal_i2c.o ABSOLUTE
    Drivers\STM32F3xx_HAL_Driver\Src\stm32f3xx_hal_rcc.c 0x00000000   Number         0  stm32f3xx_hal_rcc.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal.c 0x00000000   Number         0  stm32f3xx_hal.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal_cortex.c 0x00000000   Number         0  stm32f3xx_hal_cortex.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal_dma.c 0x00000000   Number         0  stm32f3xx_hal_dma.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal_gpio.c 0x00000000   Number         0  stm32f3xx_hal_gpio.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal_i2c.c 0x00000000   Number         0  stm32f3xx_hal_i2c.o ABSOLUTE
    Drivers\\STM32F3xx_HAL_Driver\\Src\\stm32f3xx_hal_rcc.c 0x00000000   Number         0  stm32f3xx_hal_rcc.o ABSOLUTE
    GPIO\Src\gpio_setup.c                    0x00000000   Number         0  gpio_setup.o ABSOLUTE
    GPIO\Src\stm32f3xx_it.c                  0x00000000   Number         0  stm32f3xx_it.o ABSOLUTE
    GPIO\\Src\\gpio_setup.c                  0x00000000   Number         0  gpio_setup.o ABSOLUTE
    GPIO\\Src\\stm32f3xx_it.c                0x00000000   Number         0  stm32f3xx_it.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F303VCTx\startup_stm32f303xc.s 0x00000000   Number         0  startup_stm32f303xc.o ABSOLUTE
    RTE\Device\STM32F303VCTx\system_stm32f3xx.c 0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F303VCTx\\system_stm32f3xx.c 0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    Src\Q3.c                                 0x00000000   Number         0  q3.o ABSOLUTE
    Src\\Q3.c                                0x00000000   Number         0  q3.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32f303xc.o(RESET)
    .ARM.Collect$$$$00000000                 0x08000188   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x08000188   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0800018c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x08000190   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x08000190   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x08000190   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x08000198   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x08000198   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x08000198   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x08000198   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x0800019c   Section       36  startup_stm32f303xc.o(.text)
    $v0                                      0x0800019c   Number         0  startup_stm32f303xc.o(.text)
    .text                                    0x080001c0   Section      196  irq_cm4f.o(.text)
    $v0                                      0x080001c0   Number         0  irq_cm4f.o(.text)
    .text                                    0x08000284   Section        0  rand.o(.text)
    .text                                    0x080002a8   Section        0  memcpya.o(.text)
    .text                                    0x080002cc   Section        0  memseta.o(.text)
    .text                                    0x080002f0   Section       36  init.o(.text)
    .text                                    0x08000314   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x0800034e   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x0800034f   Thumb Code    68  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08000392   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x08000393   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080003f4   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x080003f5   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08000410   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x08000418   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0800041c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x0800043c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08000440   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x08000444   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08000448   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08000450   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08000480   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08000484   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x08000488   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x0800048c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08000490   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08000491   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x080004fc   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x080004fd   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x08000548   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x0800054c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x0800056c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08000570   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x08000598   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x0800059c   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x080005bc   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080005c0   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x08000628   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x0800062c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x0800064c   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08000650   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x080006c4   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080006c8   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x080006ca   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800074a   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800079c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080007d2   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800080c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000856   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x0800089c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x0800089d   Thumb Code   186  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000956   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x080009a0   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08000a2c   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000a30   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x08000a9c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08000aa0   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000aa4   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxSemaphorePostProcess                0x08000aa5   Thumb Code    54  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x08000adc   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x08000add   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08000b10   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08000b14   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08000b15   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x08000b98   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08000b9c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x08000b9d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x08000bd4   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08000bd8   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x08000c08   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000c0c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x08000c64   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000c68   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x08000c69   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x08000cbc   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08000cc0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000cd4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000cfe   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000d12   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x08000d13   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08000d3c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x08000d4c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08000d50   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08000d64   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x08000d84   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x08000d88   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08000d8c   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x08000dbc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x08000dc0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08000dc4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x08000dc8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08000dcc   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08000dd8   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08000ddc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x08000e14   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08000e18   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08000e4c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08000eb8   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08000ebc   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x08000eec   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x08000ef0   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x08000ef4   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x08000ef8   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x08000ef9   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08000f4c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08000f50   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x08000fa0   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x08000fa4   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x08000fc4   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x08000fc8   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x08001028   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x0800102c   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x08001034   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08001038   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x0800108c   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x08001090   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.38_0                            0x080010b0   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x080010b4   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x080010d4   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x080010d8   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.26_0                            0x080010f8   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x080010fc   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x080010fd   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08001110   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x08001111   Thumb Code   340  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x08001258   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x0800125c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x08001260   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001264   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x08001265   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x080012dc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x080012e0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x080012e4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x080012e8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080012ec   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x080012ed   Thumb Code   224  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x080013c8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080013cc   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x080013cd   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x080014f8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x080014fc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001500   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x08001501   Thumb Code   192  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x080015bc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080015c0   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreAcquire                   0x080015c1   Thumb Code    88  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.10_0                            0x08001614   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08001618   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreNew                       0x08001619   Thumb Code   128  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_0                             0x08001690   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x08001694   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08001698   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxSemaphoreRelease                   0x08001699   Thumb Code    84  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x080016ec   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x080016ed   Thumb Code   112  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x08001758   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800175c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsSet                     0x0800175d   Thumb Code   102  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x080017c4   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadFlagsWait                    0x080017c5   Thumb Code    76  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.61_0                            0x0800180c   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08001810   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x08001811   Thumb Code   476  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x080019d8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x080019dc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x080019e0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x080019e4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x080019e8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080019ec   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x080019ed   Thumb Code    56  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x08001a20   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.CalculateMean                          0x08001a24   Section        0  q3.o(i.CalculateMean)
    i.CalculateVariance                      0x08001ad4   Section        0  q3.o(i.CalculateVariance)
    i.EXTI0_IRQHandler                       0x08001be4   Section        0  stm32f3xx_it.o(i.EXTI0_IRQHandler)
    i.FilterData                             0x08001bf0   Section        0  q3.o(i.FilterData)
    i.GenerateData                           0x08001c98   Section        0  q3.o(i.GenerateData)
    i.HAL_GPIO_EXTI_Callback                 0x08001d24   Section        0  q3.o(i.HAL_GPIO_EXTI_Callback)
    i.HAL_GPIO_EXTI_IRQHandler               0x08001d90   Section        0  stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler)
    i.HAL_GPIO_Init                          0x08001dac   Section        0  stm32f3xx_hal_gpio.o(i.HAL_GPIO_Init)
    i.HAL_NVIC_EnableIRQ                     0x080020d0   Section        0  stm32f3xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ)
    i.HAL_NVIC_SetPriority                   0x08002134   Section        0  stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority)
    i.InputData                              0x08002204   Section        0  q3.o(i.InputData)
    i.LEDOutput                              0x080022a8   Section        0  q3.o(i.LEDOutput)
    i.NVIC_GetPriorityGrouping               0x08002314   Section        0  stm32f3xx_hal_cortex.o(i.NVIC_GetPriorityGrouping)
    NVIC_GetPriorityGrouping                 0x08002315   Thumb Code    10  stm32f3xx_hal_cortex.o(i.NVIC_GetPriorityGrouping)
    i.NVIC_SetPriority                       0x08002324   Section        0  stm32f3xx_hal_cortex.o(i.NVIC_SetPriority)
    NVIC_SetPriority                         0x08002325   Thumb Code    32  stm32f3xx_hal_cortex.o(i.NVIC_SetPriority)
    i.SystemCoreClockUpdate                  0x0800234c   Section        0  system_stm32f3xx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x080023ec   Section        0  system_stm32f3xx.o(i.SystemInit)
    i.__scatterload_copy                     0x08002468   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08002476   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08002478   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.app_main                               0x08002488   Section        0  q3.o(i.app_main)
    i.assert_failed                          0x0800251c   Section        0  gpio_setup.o(i.assert_failed)
    i.board_setup                            0x0800251e   Section        0  gpio_setup.o(i.board_setup)
    i.gpio_setup                             0x08002528   Section        0  gpio_setup.o(i.gpio_setup)
    i.main                                   0x080025bc   Section        0  q3.o(i.main)
    i.osRtxErrorNotify                       0x080025d8   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x080025f8   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.osSignalSet                            0x080025fc   Section        0  cmsis_os1.o(i.osSignalSet)
    i.osSignalWait                           0x0800261e   Section        0  cmsis_os1.o(i.osSignalWait)
    i.osThreadCreate                         0x08002688   Section        0  cmsis_os1.o(i.osThreadCreate)
    .constdata                               0x080026a0   Section      280  q3.o(.constdata)
    .constdata                               0x080027b8   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x080027b8   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x080027dc   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08002800   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x0800281c   Section       24  system_stm32f3xx.o(.constdata)
    .rodata                                  0x08002834   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08002834   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x0800289c   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x080028d4   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x080028d4   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section      476  q3.o(.bss.os.thread.cb)
    os_thread_cb_app_main                    0x200010c4   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_GenerateData                0x20001108   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_InputData                   0x2000114c   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_FilterData                  0x20001190   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_CalculateMean               0x200011d4   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_CalculateVariance           0x20001218   Data          68  q3.o(.bss.os.thread.cb)
    os_thread_cb_LEDOutput                   0x2000125c   Data          68  q3.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x200012a0   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012a0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012e4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001328   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001328   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001428   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20001528   Section       71  q3.o(.data)
    .data                                    0x20001570   Section        4  system_stm32f3xx.o(.data)
    .data                                    0x20001574   Section        4  rand.o(.data)
    _rand_state                              0x20001574   Data           4  rand.o(.data)
    .bss                                     0x2000161c   Section    32096  q3.o(.bss)
    [Anonymous Symbol]                       0x2000937c   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x2000937c   Data           1  os_systick.o(.bss.PendST)
    STACK                                    0x20009380   Section     1024  startup_stm32f303xc.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  q3.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32f303xc.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f303xc.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32f303xc.o(RESET)
    __main                                   0x08000189   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x08000189   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0800018d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x08000191   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x08000191   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x08000191   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x08000191   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x08000199   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x08000199   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x0800019d   Thumb Code     8  startup_stm32f303xc.o(.text)
    NMI_Handler                              0x080001a5   Thumb Code     2  startup_stm32f303xc.o(.text)
    HardFault_Handler                        0x080001a7   Thumb Code     2  startup_stm32f303xc.o(.text)
    MemManage_Handler                        0x080001a9   Thumb Code     2  startup_stm32f303xc.o(.text)
    BusFault_Handler                         0x080001ab   Thumb Code     2  startup_stm32f303xc.o(.text)
    UsageFault_Handler                       0x080001ad   Thumb Code     2  startup_stm32f303xc.o(.text)
    DebugMon_Handler                         0x080001b1   Thumb Code     2  startup_stm32f303xc.o(.text)
    ADC1_2_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    ADC3_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    ADC4_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    CAN_RX1_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    CAN_SCE_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    COMP1_2_3_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    COMP4_5_6_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    COMP7_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA2_Channel1_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA2_Channel2_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA2_Channel3_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA2_Channel4_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    DMA2_Channel5_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI15_10_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI1_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI2_TSC_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI3_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI4_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    EXTI9_5_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    FLASH_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    FPU_IRQHandler                           0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    I2C1_ER_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    I2C1_EV_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    I2C2_ER_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    I2C2_EV_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    PVD_IRQHandler                           0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    RCC_IRQHandler                           0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    RTC_Alarm_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    RTC_WKUP_IRQHandler                      0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    SPI1_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    SPI2_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    SPI3_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TAMP_STAMP_IRQHandler                    0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM1_CC_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM2_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM3_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM4_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM6_DAC_IRQHandler                      0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM7_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM8_BRK_IRQHandler                      0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM8_CC_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    TIM8_UP_IRQHandler                       0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    UART4_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    UART5_IRQHandler                         0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USART1_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USART2_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USART3_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USBWakeUp_IRQHandler                     0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USBWakeUp_RMP_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USB_HP_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    USB_LP_IRQHandler                        0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    WWDG_IRQHandler                          0x080001b7   Thumb Code     0  startup_stm32f303xc.o(.text)
    SVC_Handler                              0x080001c1   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x08000259   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x08000269   Thumb Code    16  irq_cm4f.o(.text)
    rand                                     0x08000285   Thumb Code    20  rand.o(.text)
    srand                                    0x08000299   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x080002a9   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x080002a9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x080002a9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x080002cd   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x080002cd   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x080002cd   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x080002db   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x080002db   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x080002db   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x080002df   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x080002f1   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x080002f1   Thumb Code     0  init.o(.text)
    __decompress                             0x08000315   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x08000315   Thumb Code    58  __dczerorl.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x08000411   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0800041d   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08000449   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08000451   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x0800054d   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x08000571   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x0800059d   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080005c1   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x0800062d   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08000651   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxKernelPreInit                       0x080006c9   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x080006cb   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800074b   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800079d   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080007d3   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800080d   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000857   Thumb Code    70  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08000957   Thumb Code    74  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x080009a1   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000a31   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08000bd9   Thumb Code    52  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000c0d   Thumb Code    92  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000cc1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000cd5   Thumb Code    42  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000cff   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadReadyPut                      0x08000d3d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08000d51   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08000d65   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08000d8d   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08000dcd   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08000ddd   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08000e19   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08000e4d   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x08000ebd   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x08000f51   Thumb Code    84  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x08000fa5   Thumb Code    36  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x08000fc9   Thumb Code   100  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x0800102d   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x08001039   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x08001091   Thumb Code    36  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x080010b5   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x080010d9   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    CalculateMean                            0x08001a25   Thumb Code   148  q3.o(i.CalculateMean)
    CalculateVariance                        0x08001ad5   Thumb Code   244  q3.o(i.CalculateVariance)
    EXTI0_IRQHandler                         0x08001be5   Thumb Code    10  stm32f3xx_it.o(i.EXTI0_IRQHandler)
    FilterData                               0x08001bf1   Thumb Code   138  q3.o(i.FilterData)
    GenerateData                             0x08001c99   Thumb Code   126  q3.o(i.GenerateData)
    HAL_GPIO_EXTI_Callback                   0x08001d25   Thumb Code    94  q3.o(i.HAL_GPIO_EXTI_Callback)
    HAL_GPIO_EXTI_IRQHandler                 0x08001d91   Thumb Code    24  stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler)
    HAL_GPIO_Init                            0x08001dad   Thumb Code   692  stm32f3xx_hal_gpio.o(i.HAL_GPIO_Init)
    HAL_NVIC_EnableIRQ                       0x080020d1   Thumb Code    44  stm32f3xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08002135   Thumb Code   152  stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority)
    InputData                                0x08002205   Thumb Code   148  q3.o(i.InputData)
    LEDOutput                                0x080022a9   Thumb Code    90  q3.o(i.LEDOutput)
    SystemCoreClockUpdate                    0x0800234d   Thumb Code   138  system_stm32f3xx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x080023ed   Thumb Code   104  system_stm32f3xx.o(i.SystemInit)
    __scatterload_copy                       0x08002469   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08002477   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08002479   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    app_main                                 0x08002489   Thumb Code    96  q3.o(i.app_main)
    assert_failed                            0x0800251d   Thumb Code     2  gpio_setup.o(i.assert_failed)
    board_setup                              0x0800251f   Thumb Code     8  gpio_setup.o(i.board_setup)
    gpio_setup                               0x08002529   Thumb Code   134  gpio_setup.o(i.gpio_setup)
    main                                     0x080025bd   Thumb Code    24  q3.o(i.main)
    osRtxErrorNotify                         0x080025d9   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x080025f9   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    osSignalSet                              0x080025fd   Thumb Code    34  cmsis_os1.o(i.osSignalSet)
    osSignalWait                             0x0800261f   Thumb Code   106  cmsis_os1.o(i.osSignalWait)
    osThreadCreate                           0x08002689   Thumb Code    24  cmsis_os1.o(i.osThreadCreate)
    os_thread_def_app_main                   0x080026a0   Data          40  q3.o(.constdata)
    os_thread_def_GenerateData               0x080026c8   Data          40  q3.o(.constdata)
    os_thread_def_InputData                  0x080026f0   Data          40  q3.o(.constdata)
    os_thread_def_FilterData                 0x08002718   Data          40  q3.o(.constdata)
    os_thread_def_CalculateMean              0x08002740   Data          40  q3.o(.constdata)
    os_thread_def_CalculateVariance          0x08002768   Data          40  q3.o(.constdata)
    os_thread_def_LEDOutput                  0x08002790   Data          40  q3.o(.constdata)
    osRtxUserSVC                             0x08002818   Data           4  rtx_lib.o(.constdata)
    AHBPrescTable                            0x0800281c   Data          16  system_stm32f3xx.o(.constdata)
    APBPrescTable                            0x0800282c   Data           8  system_stm32f3xx.o(.constdata)
    osRtxConfig                              0x08002834   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x0800289c   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x080028e0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002900   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20001040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200010c4   Number         0  q3.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001328   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tInputData                               0x20001528   Data           4  q3.o(.data)
    tGenerateData                            0x2000152c   Data           4  q3.o(.data)
    tFilterData                              0x20001530   Data           4  q3.o(.data)
    tCalculateMean                           0x20001534   Data           4  q3.o(.data)
    tCalculateVariance                       0x20001538   Data           4  q3.o(.data)
    tLEDOutput                               0x2000153c   Data           4  q3.o(.data)
    id_shared1                               0x20001540   Data           4  q3.o(.data)
    weighted_values                          0x20001544   Data          28  q3.o(.data)
    filter_data_sum                          0x20001560   Data           4  q3.o(.data)
    mean_sum                                 0x20001564   Data           4  q3.o(.data)
    var_sum                                  0x20001568   Data           4  q3.o(.data)
    variance_flag                            0x2000156c   Data           1  q3.o(.data)
    mean_flag                                0x2000156d   Data           1  q3.o(.data)
    update_LED                               0x2000156e   Data           1  q3.o(.data)
    SystemCoreClock                          0x20001570   Data           4  system_stm32f3xx.o(.data)
    osRtxInfo                                0x20001578   Data         164  rtx_kernel.o(.data.os)
    data_store                               0x2000161c   Data          28  q3.o(.bss)
    process_buffer                           0x20001638   Data          28  q3.o(.bss)
    input_buffer                             0x20001654   Data          36  q3.o(.bss)
    log_output                               0x20001678   Data       32004  q3.o(.bss)
    __initial_sp                             0x20009780   Data           0  startup_stm32f303xc.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000189

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003f1c, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00002950])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002900, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000188   Data   RO         1269    RESET               startup_stm32f303xc.o
    0x08000188   0x08000188   0x00000000   Code   RO         1806  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x08000188   0x08000188   0x00000004   Code   RO         1818    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x0800018c   0x0800018c   0x00000004   Code   RO         1821    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1823    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1825    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x08000190   0x08000190   0x00000008   Code   RO         1826    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x08000198   0x08000198   0x00000000   Code   RO         1828    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x08000198   0x08000198   0x00000000   Code   RO         1830    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x08000198   0x08000198   0x00000004   Code   RO         1819    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x0800019c   0x0800019c   0x00000024   Code   RO         1270    .text               startup_stm32f303xc.o
    0x080001c0   0x080001c0   0x000000c4   Code   RO         1744    .text               RTX_CM4F.lib(irq_cm4f.o)
    0x08000284   0x08000284   0x00000024   Code   RO         1809    .text               mc_w.l(rand.o)
    0x080002a8   0x080002a8   0x00000024   Code   RO         1812    .text               mc_w.l(memcpya.o)
    0x080002cc   0x080002cc   0x00000024   Code   RO         1814    .text               mc_w.l(memseta.o)
    0x080002f0   0x080002f0   0x00000024   Code   RO         1832    .text               mc_w.l(init.o)
    0x08000314   0x08000314   0x0000003a   Code   RO         1842    .text               mc_w.l(__dczerorl.o)
    0x0800034e   0x0800034e   0x00000044   Code   RO         1727    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000392   0x08000392   0x00000062   Code   RO         1721    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080003f4   0x080003f4   0x0000001c   Code   RO         1719    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000410   0x08000410   0x0000000c   Code   RO         1785    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x0800041c   0x0800041c   0x0000002c   Code   RO         1781    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x08000448   0x08000448   0x00000006   Code   RO         1787    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x0800044e   0x0800044e   0x00000002   PAD
    0x08000450   0x08000450   0x00000040   Code   RO         1779    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x08000490   0x08000490   0x0000006a   Code   RO         1453    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x080004fa   0x080004fa   0x00000002   PAD
    0x080004fc   0x080004fc   0x00000050   Code   RO         1539    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x0800054c   0x0800054c   0x00000024   Code   RO         1506    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x08000570   0x08000570   0x0000002c   Code   RO         1310    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x0800059c   0x0800059c   0x00000024   Code   RO         1320    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x080005c0   0x080005c0   0x0000006c   Code   RO         1693    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0800062c   0x0800062c   0x00000024   Code   RO         1687    .text.osMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000650   0x08000650   0x00000078   Code   RO         1691    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080006c8   0x080006c8   0x00000002   Code   RO         1308    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x080006ca   0x080006ca   0x00000080   Code   RO         1751    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x0800074a   0x0800074a   0x00000052   Code   RO         1753    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x0800079c   0x0800079c   0x00000036   Code   RO         1749    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x080007d2   0x080007d2   0x0000003a   Code   RO         1636    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x0800080c   0x0800080c   0x0000004a   Code   RO         1638    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x08000856   0x08000856   0x00000046   Code   RO         1634    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x0800089c   0x0800089c   0x000000ba   Code   RO         1717    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000956   0x08000956   0x0000004a   Code   RO         1564    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080009a0   0x080009a0   0x00000090   Code   RO         1766    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08000a30   0x08000a30   0x00000074   Code   RO         1768    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x08000aa4   0x08000aa4   0x00000036   Code   RO         1615    .text.osRtxSemaphorePostProcess  RTX_CM4F.lib(rtx_semaphore.o)
    0x08000ada   0x08000ada   0x00000002   PAD
    0x08000adc   0x08000adc   0x00000038   Code   RO         1393    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08000b14   0x08000b14   0x00000088   Code   RO         1401    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08000b9c   0x08000b9c   0x0000003c   Code   RO         1397    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08000bd8   0x08000bd8   0x00000034   Code   RO         1383    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x08000c0c   0x08000c0c   0x0000005c   Code   RO         1391    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x08000c68   0x08000c68   0x00000058   Code   RO         1477    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x08000cc0   0x08000cc0   0x00000014   Code   RO         1375    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x08000cd4   0x08000cd4   0x0000002a   Code   RO         1373    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x08000cfe   0x08000cfe   0x00000014   Code   RO         1379    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08000d12   0x08000d12   0x0000002a   Code   RO         1451    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x08000d3c   0x08000d3c   0x00000014   Code   RO         1381    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x08000d50   0x08000d50   0x00000014   Code   RO         1385    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x08000d64   0x08000d64   0x00000028   Code   RO         1389    .text.osRtxThreadStackCheck  RTX_CM4F.lib(rtx_thread.o)
    0x08000d8c   0x08000d8c   0x00000040   Code   RO         1403    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x08000dcc   0x08000dcc   0x00000010   Code   RO         1387    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x08000ddc   0x08000ddc   0x0000003c   Code   RO         1399    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x08000e18   0x08000e18   0x00000032   Code   RO         1395    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x08000e4a   0x08000e4a   0x00000002   PAD
    0x08000e4c   0x08000e4c   0x00000070   Code   RO         1764    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08000ebc   0x08000ebc   0x0000003c   Code   RO         1523    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x08000ef8   0x08000ef8   0x00000058   Code   RO         1525    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x08000f50   0x08000f50   0x00000054   Code   RO         1603    .text.osSemaphoreAcquire  RTX_CM4F.lib(rtx_semaphore.o)
    0x08000fa4   0x08000fa4   0x00000024   Code   RO         1599    .text.osSemaphoreNew  RTX_CM4F.lib(rtx_semaphore.o)
    0x08000fc8   0x08000fc8   0x00000064   Code   RO         1605    .text.osSemaphoreRelease  RTX_CM4F.lib(rtx_semaphore.o)
    0x0800102c   0x0800102c   0x0000000c   Code   RO         1435    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08001038   0x08001038   0x00000058   Code   RO         1443    .text.osThreadFlagsSet  RTX_CM4F.lib(rtx_thread.o)
    0x08001090   0x08001090   0x00000024   Code   RO         1449    .text.osThreadFlagsWait  RTX_CM4F.lib(rtx_thread.o)
    0x080010b4   0x080010b4   0x00000024   Code   RO         1407    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x080010d8   0x080010d8   0x00000024   Code   RO         1425    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x080010fc   0x080010fc   0x00000014   Code   RO         1510    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x08001110   0x08001110   0x00000154   Code   RO         1348    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08001264   0x08001264   0x00000088   Code   RO         1350    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x080012ec   0x080012ec   0x000000e0   Code   RO         1729    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080013cc   0x080013cc   0x00000134   Code   RO         1715    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001500   0x08001500   0x000000c0   Code   RO         1725    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080015c0   0x080015c0   0x00000058   Code   RO         1619    .text.svcRtxSemaphoreAcquire  RTX_CM4F.lib(rtx_semaphore.o)
    0x08001618   0x08001618   0x00000080   Code   RO         1613    .text.svcRtxSemaphoreNew  RTX_CM4F.lib(rtx_semaphore.o)
    0x08001698   0x08001698   0x00000054   Code   RO         1621    .text.svcRtxSemaphoreRelease  RTX_CM4F.lib(rtx_semaphore.o)
    0x080016ec   0x080016ec   0x00000070   Code   RO         1481    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x0800175c   0x0800175c   0x00000066   Code   RO         1489    .text.svcRtxThreadFlagsSet  RTX_CM4F.lib(rtx_thread.o)
    0x080017c2   0x080017c2   0x00000002   PAD
    0x080017c4   0x080017c4   0x0000004c   Code   RO         1495    .text.svcRtxThreadFlagsWait  RTX_CM4F.lib(rtx_thread.o)
    0x08001810   0x08001810   0x000001dc   Code   RO         1405    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x080019ec   0x080019ec   0x00000038   Code   RO         1467    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x08001a24   0x08001a24   0x000000b0   Code   RO          948    i.CalculateMean     q3.o
    0x08001ad4   0x08001ad4   0x00000110   Code   RO          949    i.CalculateVariance  q3.o
    0x08001be4   0x08001be4   0x0000000a   Code   RO          925    i.EXTI0_IRQHandler  stm32f3xx_it.o
    0x08001bee   0x08001bee   0x00000002   PAD
    0x08001bf0   0x08001bf0   0x000000a8   Code   RO          950    i.FilterData        q3.o
    0x08001c98   0x08001c98   0x0000008c   Code   RO          951    i.GenerateData      q3.o
    0x08001d24   0x08001d24   0x0000006c   Code   RO          952    i.HAL_GPIO_EXTI_Callback  q3.o
    0x08001d90   0x08001d90   0x0000001c   Code   RO          416    i.HAL_GPIO_EXTI_IRQHandler  stm32f3xx_hal_gpio.o
    0x08001dac   0x08001dac   0x00000324   Code   RO          417    i.HAL_GPIO_Init     stm32f3xx_hal_gpio.o
    0x080020d0   0x080020d0   0x00000064   Code   RO          220    i.HAL_NVIC_EnableIRQ  stm32f3xx_hal_cortex.o
    0x08002134   0x08002134   0x000000d0   Code   RO          226    i.HAL_NVIC_SetPriority  stm32f3xx_hal_cortex.o
    0x08002204   0x08002204   0x000000a4   Code   RO          953    i.InputData         q3.o
    0x080022a8   0x080022a8   0x0000006c   Code   RO          954    i.LEDOutput         q3.o
    0x08002314   0x08002314   0x00000010   Code   RO          233    i.NVIC_GetPriorityGrouping  stm32f3xx_hal_cortex.o
    0x08002324   0x08002324   0x00000028   Code   RO          234    i.NVIC_SetPriority  stm32f3xx_hal_cortex.o
    0x0800234c   0x0800234c   0x000000a0   Code   RO         1276    i.SystemCoreClockUpdate  system_stm32f3xx.o
    0x080023ec   0x080023ec   0x0000007c   Code   RO         1277    i.SystemInit        system_stm32f3xx.o
    0x08002468   0x08002468   0x0000000e   Code   RO         1836    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08002476   0x08002476   0x00000002   Code   RO         1837    i.__scatterload_null  mc_w.l(handlers.o)
    0x08002478   0x08002478   0x0000000e   Code   RO         1838    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08002486   0x08002486   0x00000002   PAD
    0x08002488   0x08002488   0x00000094   Code   RO          955    i.app_main          q3.o
    0x0800251c   0x0800251c   0x00000002   Code   RO          890    i.assert_failed     gpio_setup.o
    0x0800251e   0x0800251e   0x00000008   Code   RO          891    i.board_setup       gpio_setup.o
    0x08002526   0x08002526   0x00000002   PAD
    0x08002528   0x08002528   0x00000094   Code   RO          892    i.gpio_setup        gpio_setup.o
    0x080025bc   0x080025bc   0x0000001c   Code   RO          956    i.main              q3.o
    0x080025d8   0x080025d8   0x00000020   Code   RO         1236    i.osRtxErrorNotify  rtx_config.o
    0x080025f8   0x080025f8   0x00000004   Code   RO         1237    i.osRtxIdleThread   rtx_config.o
    0x080025fc   0x080025fc   0x00000022   Code   RO         1061    i.osSignalSet       cmsis_os1.o
    0x0800261e   0x0800261e   0x0000006a   Code   RO         1062    i.osSignalWait      cmsis_os1.o
    0x08002688   0x08002688   0x00000018   Code   RO         1063    i.osThreadCreate    cmsis_os1.o
    0x080026a0   0x080026a0   0x00000118   Data   RO          960    .constdata          q3.o
    0x080027b8   0x080027b8   0x00000064   Data   RO         1190    .constdata          rtx_lib.o
    0x0800281c   0x0800281c   0x00000018   Data   RO         1278    .constdata          system_stm32f3xx.o
    0x08002834   0x08002834   0x000000a0   Data   RO         1192    .rodata             rtx_lib.o
    0x080028d4   0x080028d4   0x0000000b   Data   RO         1362    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x080028df   0x080028df   0x00000001   PAD
    0x080028e0   0x080028e0   0x00000020   Data   RO         1834    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM2 (Exec base: 0x10000000, Load base: 0x08002950, Size: 0x00000000, Max: 0x00002000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08002900, Size: 0x00009780, Max: 0x0000c000, ABSOLUTE, COMPRESSED[0x00000050])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001040   Data   RW         1185    .bss.os             rtx_lib.o
    0x20001040   COMPRESSED   0x00000034   Data   RW         1186    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001074   COMPRESSED   0x00000050   Data   RW         1187    .bss.os.msgqueue.mem  rtx_lib.o
    0x200010c4   COMPRESSED   0x000001dc   Data   RW          958    .bss.os.thread.cb   q3.o
    0x200012a0   COMPRESSED   0x00000088   Data   RW         1188    .bss.os.thread.cb   rtx_lib.o
    0x20001328   COMPRESSED   0x00000200   Data   RW         1189    .bss.os.thread.stack  rtx_lib.o
    0x20001528   COMPRESSED   0x00000047   Data   RW          961    .data               q3.o
    0x2000156f   COMPRESSED   0x00000001   PAD
    0x20001570   COMPRESSED   0x00000004   Data   RW         1279    .data               system_stm32f3xx.o
    0x20001574   COMPRESSED   0x00000004   Data   RW         1810    .data               mc_w.l(rand.o)
    0x20001578   COMPRESSED   0x000000a4   Data   RW         1363    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x2000161c        -       0x00007d60   Zero   RW          957    .bss                q3.o
    0x2000937c        -       0x00000001   Zero   RW         1797    .bss.PendST         RTX_CM4F.lib(os_systick.o)
    0x2000937d   COMPRESSED   0x00000003   PAD
    0x20009380        -       0x00000400   Zero   RW         1267    STACK               startup_stm32f303xc.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       164          0          0          0          0       3002   cmsis_os1.o
       158         14          0          0          0       1867   gpio_setup.o
      1312        204        280        547      32096      24494   q3.o
        36          6          0          0          0       1037   rtx_config.o
         0          0        260       4940          0      12746   rtx_lib.o
        36          8        392          0       1024        844   startup_stm32f303xc.o
         0          0          0          0          0     224716   stm32f3xx_hal.o
       364        126          0          0          0      29111   stm32f3xx_hal_cortex.o
       832        116          0          0          0       2431   stm32f3xx_hal_gpio.o
        10          0          0          0          0        475   stm32f3xx_it.o
       284         42         24          4          0       1887   system_stm32f3xx.o

    ----------------------------------------------------------------------
      3200        516        988       5492      33120     302610   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          0          1          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        536   irq_cm4f.o
       126         32          0          0          1       3111   os_systick.o
        56          4          0          0          0       2838   rtx_delay.o
       558         36         11        164          0      17132   rtx_kernel.o
       264          0          0          0          0       2403   rtx_memory.o
       202          0          0          0          0      16408   rtx_mempool.o
      1368         28          0          0          0      18781   rtx_msgqueue.o
        74          0          0          0          0       9465   rtx_mutex.o
       574         24          0          0          0      10919   rtx_semaphore.o
       372         26          0          0          0       5381   rtx_system.o
      2014        112          0          0          0      32390   rtx_thread.o
       228         20          0          0          0      10252   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        36         10          0          4          0        136   rand.o

    ----------------------------------------------------------------------
      6296        320         12        168          4     129996   Library Totals
        12          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6032        294         11        164          1     129616   RTX_CM4F.lib
       252         26          0          4          0        380   mc_w.l

    ----------------------------------------------------------------------
      6296        320         12        168          4     129996   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9496        836       1000       5660      33124     430378   Grand Totals
      9496        836       1000         80      33124     430378   ELF Image Totals (compressed)
      9496        836       1000         80          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10496 (  10.25kB)
    Total RW  Size (RW Data + ZI Data)             38784 (  37.88kB)
    Total ROM Size (Code + RO Data + RW Data)      10576 (  10.33kB)

==============================================================================

